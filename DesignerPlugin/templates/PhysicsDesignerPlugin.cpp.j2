/*
    Copyright (C) 2013-2014 Remi Thebault
    All rights reserved.

    This program and its source code are distributed under the
    terms of the BSD-style license, that can be found in the
    License.txt file at project root.
*/

#include "QtPlugin"

#include "PhysicsDesignerPlugin.hpp"

{% for dim in dims %}
#include <siui/{{ dim.name }}Label.hpp>
#include <siui/{{ dim.name }}SpinBox.hpp>
{% endfor %}

DesignerInterfaceCollection::DesignerInterfaceCollection(QObject *parent) :
    QObject(parent)
{
{% for dim in dims %}
    plugs_.append(new {{ dim.name }}LabelDesignerInterface(this));
{% endfor %}
{% for dim in dims %}
    plugs_.append(new {{ dim.name }}SpinBoxDesignerInterface(this));
{% endfor %}
}

DesignerInterfaceCollection::~DesignerInterfaceCollection()
{
}

QList<QDesignerCustomWidgetInterface*>
    DesignerInterfaceCollection::customWidgets() const
{
    return plugs_;
}

DesignerInterface::DesignerInterface(QObject *parent)
    : QObject(parent)
{}

DesignerInterface::~DesignerInterface()
{}

void DesignerInterface::initialize(QDesignerFormEditorInterface * /* core */)
{
    if (_initialized)
        return;

    _initialized = true;
}

bool DesignerInterface::isInitialized() const
{
    return _initialized;
}


{% for dim in dims %}

{{ dim.name }}LabelDesignerInterface::{{ dim.name }}LabelDesignerInterface(QObject *parent) :
    DesignerInterface(parent)
{}

{{ dim.name }}LabelDesignerInterface::~{{ dim.name }}LabelDesignerInterface()
{}

QString {{ dim.name }}LabelDesignerInterface::name() const
{
    return "siui::{{ dim.name }}Label";
}

QString {{ dim.name }}LabelDesignerInterface::includeFile() const
{
    return "siui/{{ dim.name }}Label.hpp";
}

QString {{ dim.name }}LabelDesignerInterface::group() const
{
    return "Physics Widgets";
}

QString {{ dim.name }}LabelDesignerInterface::toolTip() const
{
    return "A label to display {{ dim.name }} values";
}

QIcon {{ dim.name }}LabelDesignerInterface::icon() const
{
    return QIcon{};
}

QString {{ dim.name }}LabelDesignerInterface::whatsThis() const
{
    return QLatin1String("A label widget to display {{ dim.name }} values.");
}

QString {{ dim.name }}LabelDesignerInterface::domXml() const
{
    return QLatin1String(
        "<widget "
            "class=\"siui::{{ dim.name }}Label\" "
            "name=\"{{ dim.snake_name }}Label\">\n"
        "</widget>\n"
    );
}

QWidget *{{ dim.name }}LabelDesignerInterface::createWidget(QWidget *parent)
{
    return new siui::{{ dim.name }}Label{ parent };
}




{{ dim.name }}SpinBoxDesignerInterface::{{ dim.name }}SpinBoxDesignerInterface(QObject *parent) :
    DesignerInterface(parent)
{}

{{ dim.name }}SpinBoxDesignerInterface::~{{ dim.name }}SpinBoxDesignerInterface()
{}

QString {{ dim.name }}SpinBoxDesignerInterface::name() const
{
    return "siui::{{ dim.name }}SpinBox";
}

QString {{ dim.name }}SpinBoxDesignerInterface::includeFile() const
{
    return "siui/{{ dim.name }}SpinBox.hpp";
}

QString {{ dim.name }}SpinBoxDesignerInterface::group() const
{
    return "Physics Widgets";
}

QString {{ dim.name }}SpinBoxDesignerInterface::toolTip() const
{
    return "A spin box to display and set {{ dim.name }} values";
}

QIcon {{ dim.name }}SpinBoxDesignerInterface::icon() const
{
    return QIcon{};
}

QString {{ dim.name }}SpinBoxDesignerInterface::whatsThis() const
{
    return QLatin1String("A spin box widget to display and set {{ dim.name }} values.");
}

QString {{ dim.name }}SpinBoxDesignerInterface::domXml() const
{
    return QLatin1String(
        "<widget "
            "class=\"siui::{{ dim.name }}SpinBox\" "
            "name=\"{{ dim.snake_name }}SpinBox\">\n"
        "</widget>\n"
    );
}

QWidget *{{ dim.name }}SpinBoxDesignerInterface::createWidget(QWidget *parent)
{
    return new siui::{{ dim.name }}SpinBox{ parent };
}
{% endfor %}
