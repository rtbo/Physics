/*
    Copyright (C) 2013-2014 Remi Thebault
    All rights reserved.

    This program and its source code are distributed under the
    terms of the BSD-style license, that can be found in the
    License.txt file at project root.
*/

#ifndef QPHYSICS_DESIGNERPLUGIN_HPP
#define QPHYSICS_DESIGNERPLUGIN_HPP

#include "QDesignerCustomWidgetInterface"

namespace QPhysics {


    class DesignerInterface;

    class DesignerInterfaceCollection :
            public QObject,
            public QDesignerCustomWidgetCollectionInterface
    {
        Q_OBJECT
        Q_INTERFACES( QDesignerCustomWidgetCollectionInterface )
    #if QT_VERSION >= 0x050000
        Q_PLUGIN_METADATA(IID "org.qt-project.Qt.QDesignerCustomWidgetCollectionInterface" )
    #endif

    public:

        DesignerInterfaceCollection(QObject *parent=0);
        virtual ~DesignerInterfaceCollection();

        virtual QList<QDesignerCustomWidgetInterface*> customWidgets() const;

    private:

        QList<QDesignerCustomWidgetInterface*> plugs_;

    };



    class DesignerInterface :
            public QObject,
            public QDesignerCustomWidgetInterface
    {
        Q_OBJECT
        Q_INTERFACES(QDesignerCustomWidgetInterface)

    public:
        DesignerInterface(QObject *parent = 0);
        virtual ~DesignerInterface();

        virtual bool isContainer() const override {
            return false;
        }
        virtual bool isInitialized() const;

        virtual void initialize(QDesignerFormEditorInterface *core);

    private:
        bool m_initialized;
    };

    {% for item in items %}



    class {{item.titleName}}LabelDesignerInterface : public DesignerInterface
    {
        Q_OBJECT
        Q_INTERFACES(QDesignerCustomWidgetInterface)

    public:
        {{item.titleName}}LabelDesignerInterface(QObject *parent = 0);
        virtual ~{{item.titleName}}LabelDesignerInterface();

        virtual QString name() const override {
            return "Q{{item.titleName}}Label";
        }

        virtual QString includeFile() const override {
            return "Q{{item.titleName}}Label.hpp";
        }

        virtual QString group() const override {
            return "QPhysics Widgets";
        }

        virtual QString toolTip() const override {
            return "a label to display ph::{{item.titleName}} object";
        }

        virtual QString domXml() const override;
        virtual QIcon icon() const override;
        virtual QString whatsThis() const override;

        virtual QWidget *createWidget(QWidget *parent) override;

    };


    class {{item.titleName}}SpinBoxDesignerInterface : public DesignerInterface
    {
        Q_OBJECT
        Q_INTERFACES(QDesignerCustomWidgetInterface)

    public:
        {{item.titleName}}SpinBoxDesignerInterface(QObject *parent = 0);
        virtual ~{{item.titleName}}SpinBoxDesignerInterface();

        virtual QString name() const override {
            return "Q{{item.titleName}}SpinBox";
        }

        virtual QString includeFile() const override {
            return "Q{{item.titleName}}SpinBox.hpp";
        }

        virtual QString group() const override {
            return "QPhysics Widgets";
        }

        virtual QString toolTip() const override {
            return "a spin box to edit ph::{{item.titleName}} object";
        }

        virtual QString domXml() const override;
        virtual QIcon icon() const override;
        virtual QString whatsThis() const override;

        virtual QWidget *createWidget(QWidget *parent) override;
    };
    {% endfor %}


}

#endif // QPHYSICS_DESIGNERPLUGIN_HPP
